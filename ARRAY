1)Reverse the array
methods  1.form new array and fill no time complaxity o(n)
         2. using same array using swapping technique  time complaxity o(n)
         3.recursive method
         //swapping technique
         public class{
         public static void main(String[] args){
         int[] arr = {1, 2, 3, 4, 5};
         reversArray(arr);
         System.out.println(Array.toString(arr));
         }
         static void reverseArray(int[] arr){
         int n = arr.length;
         for(int i=0; i<n/2;i++){
         int temp = arr[i];
         arr[i] = arr[n-1-i];
         arr[n-1-i]=temp;
         }
         }
         }
         
         
         //recursive technique
         
         public class{
         public static void main(String[] args){
         int[] arr = {1, 2, 3, 4, 5};
         int n = arr.length;
         reverseArray(arr,start:0,end:n-1);
         System.out.println(Arrays.toString(arr));
         }
         static void reverseArray(int[] arr, int start, int end){
         //swapping position 0-4, 1-3
         
         if(start>end)return;
         int temp = arr[start];
         arr[start] = arr[end];
         arr[end] = temp;
         
         rverseArray(arr, start:start+1, end:end-1);
         }
         }
         
<!------------------------------------------------------------------------------------------------------------------------------------------------------------!>


         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
